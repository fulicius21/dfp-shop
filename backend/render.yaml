# Render.com Deployment-Konfiguration für DressForPleasure Backend
# Optimiert für Render's kostenloses Tier mit PostgreSQL

services:
  # Web Service - Backend API
  - type: web
    name: dressforp-backend
    env: node
    plan: free  # Render's kostenloses Tier
    buildCommand: npm ci && npm run build
    startCommand: npm start
    healthCheckPath: /health
    
    # Auto-Deploy von GitHub (Optional)
    repo: https://github.com/yourusername/dressforp-backend
    branch: main
    
    # Environment Variables
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        fromService:
          type: web
          name: dressforp-backend
          property: port
      
      # Database Connection
      - key: DATABASE_URL
        fromDatabase:
          name: dressforp-db
          property: connectionString
      - key: DATABASE_SSL
        value: "true"
      - key: DB_POOL_MIN
        value: "1"
      - key: DB_POOL_MAX
        value: "5"
      - key: DB_IDLE_TIMEOUT
        value: "30000"
      
      # CORS für Frontend
      - key: CORS_ORIGIN
        value: "https://*.vercel.app,https://dressforp.com,https://www.dressforp.com"
      
      # Security
      - key: TRUST_PROXY
        value: "true"
      - key: SESSION_SECRET
        generateValue: true
      - key: JWT_SECRET
        generateValue: true
      
      # Performance Optimierung für kostenloses Tier
      - key: MAX_REQUEST_SIZE
        value: "5mb"
      - key: RENDER_ENVIRONMENT
        value: "production"
      
      # Email Service (Optional - über Render Dashboard konfigurieren)
      - key: EMAIL_PROVIDER
        value: "sendgrid"
      - key: EMAIL_FROM
        value: "noreply@dressforp.com"
      
      # Rate Limiting für kostenloses Tier
      - key: RATE_LIMIT_WINDOW_MS
        value: "900000"  # 15 Minuten
      - key: RATE_LIMIT_MAX_REQUESTS
        value: "100"
      
      # Logging
      - key: LOG_LEVEL
        value: "info"
      - key: LOG_FORMAT
        value: "json"
    
    # Domain Configuration
    domains:
      - dressforp-backend.onrender.com
    
    # Health Check Configuration
    healthCheckPath: /health
    
    # Auto-Deploy Settings
    autoDeploy: true
    
    # Resource Limits für kostenloses Tier
    disk: 1GB
    
    # Routing und Networking
    headers:
      - path: /*
        name: X-Content-Type-Options
        value: nosniff
      - path: /*
        name: X-Frame-Options
        value: DENY
      - path: /*
        name: X-XSS-Protection
        value: "1; mode=block"
      - path: /health
        name: Cache-Control
        value: "no-cache"
    
    # Redirect für HTTP zu HTTPS
    routes:
      - type: redirect
        source: /*
        destination: https://dressforp-backend.onrender.com$1
        permanent: true

# PostgreSQL Database Service
databases:
  - name: dressforp-db
    databaseName: dressforp
    user: dressforp_user
    plan: free  # Render's kostenloses PostgreSQL
    
    # Database Configuration
    region: oregon  # Render's kostenloses Tier Region
    
    # Connection Pool Settings für kostenloses Tier
    maxConnections: 20
    
    # Backup Settings (Pro Feature)
    # backupRetentionDays: 7
    
    # Extensions
    extensions:
      - uuid-ossp
      - pg_trgm

# Redis Service (Optional - Render Pro Feature)
# - name: dressforp-redis
#   type: redis
#   plan: free
#   region: oregon

# Environment Groups für bessere Organisation
envVarGroups:
  # Basis-Konfiguration
  - name: base-config
    envVars:
      - key: NODE_ENV
        value: production
      - key: LOG_LEVEL
        value: info
      - key: TRUST_PROXY
        value: "true"
  
  # Database-Konfiguration
  - name: database-config
    envVars:
      - key: DATABASE_SSL
        value: "true"
      - key: DB_POOL_MIN
        value: "1"
      - key: DB_POOL_MAX
        value: "5"
      - key: DB_IDLE_TIMEOUT
        value: "30000"
      - key: DB_CONNECTION_TIMEOUT
        value: "20000"
  
  # Security-Konfiguration
  - name: security-config
    envVars:
      - key: CORS_ORIGIN
        value: "https://*.vercel.app,https://dressforp.com"
      - key: MAX_REQUEST_SIZE
        value: "5mb"
      - key: RATE_LIMIT_WINDOW_MS
        value: "900000"
      - key: RATE_LIMIT_MAX_REQUESTS
        value: "100"

# Notifications für Deployment-Status
notifications:
  - type: email
    emails:
      - admin@dressforp.com
    events:
      - deploy-started
      - deploy-succeeded
      - deploy-failed
      - service-suspended

# Build Cache Optimization
buildSettings:
  - name: node_modules_cache
    key: node_modules
    paths:
      - node_modules
  - name: build_cache
    key: typescript_build
    paths:
      - dist

# Custom Headers für bessere Security
customHeaders:
  # Security Headers
  - path: "/*"
    headers:
      - name: "Strict-Transport-Security"
        value: "max-age=31536000; includeSubDomains"
      - name: "Content-Security-Policy"
        value: "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data: https:"
      - name: "X-Robots-Tag"
        value: "noindex, nofollow"
  
  # API-spezifische Headers
  - path: "/api/*"
    headers:
      - name: "Cache-Control"
        value: "no-cache, no-store, must-revalidate"
      - name: "Access-Control-Allow-Methods"
        value: "GET, POST, PUT, DELETE, OPTIONS"
      - name: "Access-Control-Allow-Headers"
        value: "Content-Type, Authorization, X-Requested-With"

# Monitoring und Health Checks
monitoring:
  healthChecks:
    - path: /health
      intervalSeconds: 30
      timeoutSeconds: 5
      failureThreshold: 3
    - path: /ready
      intervalSeconds: 60
      timeoutSeconds: 10
      failureThreshold: 2
  
  # Alerts für kritische Metriken
  alerts:
    - metric: response_time
      threshold: 5000  # 5 Sekunden
      comparison: greater_than
    - metric: error_rate
      threshold: 5  # 5% Error Rate
      comparison: greater_than
    - metric: cpu_usage
      threshold: 90  # 90% CPU
      comparison: greater_than

# Preview Environments (Pro Feature)
# previewsEnabled: true
# previewsExpireAfterDays: 7

# Metadata
metadata:
  name: "DressForPleasure Backend"
  description: "E-Commerce Backend API mit Node.js, TypeScript und PostgreSQL"
  version: "1.0.0"
  maintainer: "DressForPleasure Team"
  documentation: "https://github.com/yourusername/dressforp-backend/blob/main/README.md"
