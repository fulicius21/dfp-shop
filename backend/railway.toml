# Railway.app Deployment-Konfiguration für DressForPleasure Backend
# Diese Datei definiert die optimale Konfiguration für Railway's kostenloses Tier

[build]
# Build Commands für TypeScript-Projekt
builder = "nixpacks"
buildCommand = "npm run build"

[deploy]
# Start Command für Production
startCommand = "npm start"
# Health Check URL für Railway
healthcheckPath = "/health"
healthcheckTimeout = 30
# Neustart-Policy bei Fehlern
restartPolicyType = "on-failure"
restartPolicyMaxRetries = 3

[env]
# Basis Environment Variables für Railway
NODE_ENV = "production"
PORT = "${{PORT}}"
# Railway PostgreSQL Integration
DATABASE_URL = "${{DATABASE_URL}}"
DATABASE_SSL = "true"

# CORS für Vercel Frontend
CORS_ORIGIN = "https://*.vercel.app,https://dressforp.com,https://www.dressforp.com"

# Railway-spezifische Optimierungen
RAILWAY_ENVIRONMENT = "production"
MAX_REQUEST_SIZE = "5mb"
DB_POOL_MIN = "2"
DB_POOL_MAX = "10"
DB_IDLE_TIMEOUT = "30000"

# Security Settings für Railway
TRUST_PROXY = "true"
SESSION_SECRET = "${{SESSION_SECRET}}"
JWT_SECRET = "${{JWT_SECRET}}"

# Email Service (Optional)
EMAIL_PROVIDER = "sendgrid"
SENDGRID_API_KEY = "${{SENDGRID_API_KEY}}"
EMAIL_FROM = "noreply@dressforp.com"

# Stripe Integration (Optional)
STRIPE_SECRET_KEY = "${{STRIPE_SECRET_KEY}}"
STRIPE_WEBHOOK_SECRET = "${{STRIPE_WEBHOOK_SECRET}}"

# Cloudinary für Media (Optional)
CLOUDINARY_CLOUD_NAME = "${{CLOUDINARY_CLOUD_NAME}}"
CLOUDINARY_API_KEY = "${{CLOUDINARY_API_KEY}}"
CLOUDINARY_API_SECRET = "${{CLOUDINARY_API_SECRET}}"

[services.web]
# Railway Service-Konfiguration
domains = ["dressforp-backend.railway.app"]
# CPU und Memory für kostenloses Tier optimiert
cpu = 1
memory = 512

[services.database]
# PostgreSQL Service-Konfiguration
image = "postgres:15-alpine"
# Persistenter Storage für kostenlose Nutzung
volumes = ["/var/lib/postgresql/data"]

[[services.database.env]]
POSTGRES_DB = "dressforp"
POSTGRES_USER = "dressforp_user"
POSTGRES_PASSWORD = "${{POSTGRES_PASSWORD}}"

[networking]
# Port-Konfiguration für Railway
servicePorts = [3000]
# Interne Kommunikation zwischen Services
internalNetworking = true

[observability]
# Monitoring und Logging für Railway
logRetentionDays = 7
metricsEnabled = true
# Health Checks
healthChecks = [
  { path = "/health", intervalSeconds = 30, timeoutSeconds = 5 },
  { path = "/ready", intervalSeconds = 60, timeoutSeconds = 10 }
]

[scaling]
# Auto-Scaling-Konfiguration (Railway Pro Feature)
# Für kostenloses Tier: manuelle Skalierung
minReplicas = 1
maxReplicas = 1
# CPU-basierte Skalierung
cpuThreshold = 80
memoryThreshold = 80

[volumes]
# Persistente Volumes für Logs und temporäre Dateien
logs = "/app/logs"
temp = "/tmp"

[secrets]
# Secret Management Hinweise für Railway
# Diese werden über Railway Dashboard konfiguriert:
# - DATABASE_URL (automatisch von PostgreSQL Service)
# - SESSION_SECRET (generiert: openssl rand -hex 32)
# - JWT_SECRET (generiert: openssl rand -hex 64)
# - STRIPE_SECRET_KEY (von Stripe Dashboard)
# - SENDGRID_API_KEY (von SendGrid Dashboard)
# - CLOUDINARY_* (von Cloudinary Dashboard)

[region]
# Railway Region für optimale Performance
preferredRegion = "us-west1"  # Ändern je nach Zielgruppe

[metadata]
name = "DressForPleasure Backend API"
description = "Node.js/TypeScript E-Commerce Backend mit PostgreSQL"
version = "1.0.0"
author = "DressForPleasure"
